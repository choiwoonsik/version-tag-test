name: production-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: release tag versioning
        required: true
        default: patch
        type: choice
        options:
        - major
        - minor
        - patch

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Show Me
        if: github.event.ref_type == 'tag'
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: event tag
        if: startsWith(github.event.ref, 'refs/tags/v')
        env:
          INPUT_REF: ${{ github.event.ref }}
        run: echo "${{ github.event.ref }}"

      - name: Extract Tag
        id: tag
        run: echo "IMAGE_TAG=${INPUT_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Check Release Type
        run: |
          echo "release tag version type: ${{ inputs.version }}"

      - name: Current Tag Version
        run: |
          echo ${{ env.IMAGE_TAG }}
          
      - name: Setting Current Tag Version
        run: |
          CUR_MAJOR_NUMBER=`git describe --tags | sed 's/v//g' | awk -F '.' '{ print $1 }'`
          CUR_MINOR_NUMBER=`git describe --tags | sed 's/v//g' | awk -F '.' '{ print $2 }'`
          CUR_PATCH_NUMBER=`git describe --tags | sed 's/v//g' | awk -F '.' '{ print $3 }'`
          echo $CUR_MAJOR_NUMBER
          echo $CUR_MINOR_NUMBER
          echo $CUR_PATCH_NUMBER
          echo NEXT_MAJOR_NUMBER=$CUR_MAJOR_NUMBER >> $GITHUB_ENV
          echo NEXT_MINOR_NUMBER=$CUR_MINOR_NUMBER >> $GITHUB_ENV
          echo NEXT_PATCH_NUMBER=$CUR_PATCH_NUMBER >> $GITHUB_ENV
#          echo "NEXT_MAJOR_NUMBER=$CUR_MAJOR_NUMBER" >> $GITHUB_ENV
#          echo "NEXT_MINOR_NUMBER=$CUR_MINOR_NUMBER" >> $GITHUB_ENV
#          echo "NEXT_PATCH_NUMBER=$CUR_PATCH_NUMBER" >> $GITHUB_ENV
          
      - name: cur major
        run: echo ${{ env.NEXT_MAJOR_NUMBER }}

      - name: cur minor
        run: echo ${{ env.NEXT_MINOR_NUMBER }}
        
      - name: cur patch
        run: echo ${{ env.NEXT_PATCH_NUMBER }}

      - name: Calculate Next Major version Tag
        if: ${{ inputs.version }} == 'major'
        run: |
          CUR_MAJOR_NUMBER=`git describe --tags | sed 's/v//g' | awk -F '.' '{ print $1 }'`
          NEXT_MAJOR_NUMBER=`expr $CUR_MAJOR_NUMBER + 1`
          echo "NEXT_MAJOR_NUMBER=$NEXT_MAJOR_NUMBER" >> $GITHUB_ENV
          echo $NEXT_MAJOR_NUMBER

      - name: Calculate Next Minor version Tag
        if: ${{ inputs.version }} == 'minor'
        run: |
          CUR_MINOR_NUMBER=`git describe --tags | sed 's/v//g' | awk -F '.' '{ print $2 }'`
          NEXT_MINOR_NUMBER=`expr $CUR_MINOR_NUMBER + 1`
          echo "NEXT_MINOR_NUMBER=$NEXT_MINOR_NUMBER" >> $GITHUB_ENV
          echo $NEXT_MINOR_NUMBER

      - name: Calculate Next Patch version Tag
        if: ${{ inputs.version }} == 'patch'
        run: |
          CUR_PATCH_NUMBER=`git describe --tags | sed 's/v//g' | awk -F '.' '{ print $3 }'`
          NEXT_PATCH_NUMBER=`expr $CUR_PATCH_NUMBER + 1`
          echo "NEXT_PATCH_NUMBER=$NEXT_PATCH_NUMBER" >> $GITHUB_ENV
          echo $NEXT_PATCH_NUMBER

      - name: Version up
        run: |
          VERSION=${{ env.ECLIPSE_IMAGE_TAGS }}
          git commit -m "$VERSION" --author "$AUTHOR"
          git push
          
      - name: Add release commit
        run: |
          git config --global user.name 'croquiscom-pim'
          git config --global user.email 'admin@croquis.com'
          AUTHOR="${{ github.event.sender.login }} <${{ github.event.sender.id }}+${{ github.event.sender.login }}@users.noreply.github.com>"
          VERSION="v${{ env.NEXT_MAJOR_NUMBER }}.${{ env.NEXT_MINOR_NUMBER }}.${{ env.NEXT_PATCH_NUMBER }}"
          git commit -m "$VERSION" --author "$AUTHOR"
          git push
          echo $VERSION
          
      - name: Release version
        run: |
          VERSION="v${{ env.NEXT_MAJOR_NUMBER }}.${{ env.NEXT_MINOR_NUMBER }}.${{ env.NEXT_PATCH_NUMBER }}"
          git checkout --detach
          git commit --allow-empty -m "dist: v$VERSION"
          git tag v$VERSION
          git push --tags
